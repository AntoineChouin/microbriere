// -----------------------------------------------------------------------------
// This file contains all application-wide Sass variables.
// -----------------------------------------------------------------------------





/// Regular font family
/// @type List
$text-font-stack: 'Open Sans', 'Helvetica Neue Light', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif !default;

/// Code (monospace) font family
/// @type List
$code-font-stack: 'Courier New', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Monaco', monospace !default;



$colorsinback: #e73131, #e78c31, #e7e731, #8ce731, #1566b6, #e7318c;

$colorbody: #241ca9, #a1a91c, #1c5ba9, #6b1ca9, #5ba91c, #a96b1c, #a9241c;
$vertdegris: #b34348, #43b376, #4380b3, #b34380,#ae43b3, #b3ae43, #b37643; 
/// Copy text color
/// @type Color
$text-color: rgb(34, 34, 34) !default;

/// Main brand color
/// @type Color
$brand-color: rgb(229, 0, 80) !default;

/// Light grey
/// @type Color
$light-grey: rgb(237, 237, 237) !default;

/// Medium grey
/// @type Color
$mid-grey: rgb(153, 153, 153) !default;

/// Dark grey
/// @type Color
$dark-grey: rgb(68, 68, 68) !default;





/// Container's maximum width
/// @type Length
$max-width: 75em !default;
$fluid-max-width: 100vw;





/// Breakpoints map
/// @prop {String} keys - Keys are identifiers mapped to a given length
/// @prop {Map} values - Values are actual breakpoints expressed in pixels
$breakpoints: (
  'small': 320px,
  'medium': 768px,
  'large': 1024px,
  "tv": 1200px,
) !default;


////Grid-items-flex

$grid-flex: (
  
//  flex-unested: 1,
  
  primary: (
    flex-width: 100%,
    flex-column: 4,
    flex-margin: 1.25%,
  ),
//  basis: ((flex-width / flex-column) - (flex-column * flex-margin)),
  mobile: (
    flex-width: 100%,
    flex-column: 1,
    flex-margin: 0.1%,

  )


);
//color(primary, base);
//$flex: map-get(map-get($grid-flex, primary), flex-width);
//$flex: gridflex(primary, flex-width);
//@function gridflex($color-name, $color-variant) {
//  // map inception
//  @return map-get(map-get($colors, $color-name), $color-variant);
//}

 @function gridflex($color-name, $color-variant) {
  // map inception
  @return map-get(map-get($grid-flex, $color-name), $color-variant);
}


/// Relative or absolute URL where all assets are served from
/// @type String
/// @example scss - When using a CDN
///   $base-url: 'http://cdn.example.com/assets/';
$base-url: '/assets/' !default;
