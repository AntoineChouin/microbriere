// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------
/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
  @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Hugo Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}

@mixin clearfix {
//  display: flow-root;
  * {
    margin: 0;
    padding: 0;
  }
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
  /* For IE 6/7 (trigger hasLayout) */
  &.ie {
    *zoom: 1;
  }
}

@mixin flexfix {
  &:before,
  &:after {
    flex-basis: 0;
    order: 1;
  }
}

@mixin mdqrselector{
  
   @include media("<phone") {
    background-color: #def;
    
    &:before {
      content: "<=phone";
    }
  }

  @include media(">=phone", "<tablet") {
    background-color: #abc;
    
    &:before {
      content: ">=phone, <tablet";
    }    
  }

  @include media(">=tablet", "<desktop") {
    background-color: #aabbcc;
    
    &:before {
      content: ">=tablet, <desktop";
    }    
  }

  @include media(">=desktop", "<tv") {
    background-color: #aacccc;
    
    &:before {
      content: ">=desktop, < tv";
    }
  }
   @include media(">=tv") {
    background-color: #aaaacc;
    
    &:before {
      content: " < tv";
    }
  }
  
  @include media("retina2x") {
    background-color: #ccaaaa;
    &:after {
      content: "Retina" !important;
    }    
  }
  
}
@mixin wrapper {
  @include clearfix;
  margin: 0 auto;
  max-width: 100vw;
  max-height: 100%;
}

@mixin container ($container-width) {
  @include wrapper;
  width: $container-width;
  $color-fixed: #e78c31;
  background-color: transparentize($color-fixed, 0.5);
}

@mixin container-fluid {
  $color-fluid: #318ce7;
  @include wrapper;
  width: 100%;
  background: transparentize($color-fluid, 0.55);
}

@mixin bckg($color) {
  @for $i from 1 through length($color) {
    &:nth-child(#{length($color)}n + #{$i}) {
      background: lighten(nth($color, $i), 25%);
    }
  }
}

@mixin gridflex ($query) {
  flex: 1 0 ( (gridflex($query, flex-width)) / (gridflex($query, flex-column)) - ( (gridflex($query, flex-margin)) * (gridflex($query, flex-column))));
  margin: 0 (gridflex($query, flex-margin));
  border: 1px solid #aaa;
  max-width: 100%;
  max-height: 100vh;
}